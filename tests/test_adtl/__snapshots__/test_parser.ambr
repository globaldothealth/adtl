# serializer version: 1
# name: test_default_date_format
  '''
  adtl_valid,adtl_error,epoch,id,some_date,text
  True,,1999-01-11,1,1999-01-24,Lorem ipsum
  True,,2022-12-19,2,2023-01-27,example
  
  '''
# ---
# name: test_multi_id_groupby
  '''
  admission_date,country_iso3,dataset_id,enrolment_date,sex_at_birth,subject_id
  2020-06-08,GBR,dataset-2020-03-23,2020-05-06,male,P007
  2020-06-08,GBR,dataset-2020-03-23,2022-01-11,female,S001
  
  '''
# ---
# name: test_parse_write_buffer
  '''
  admission_date,country_iso3,dataset_id,enrolment_date,sex_at_birth,subject_id
  2020-06-08,GBR,dataset-2020-03-23,2020-05-06,male,S007
  2020-06-08,GBR,dataset-2020-03-23,2022-01-11,female,S001
  
  '''
# ---
# name: test_provide_empty_values_definition
  list([
    dict({
      'is_present': True,
      'name': 'headache',
    }),
  ])
# ---
# name: test_return_unmapped
  '''
  age,date_death,date_of_birth,diabetes_type,has_smoking,pregnancy_birth_weight_kg,subject_id
  fifteen,2023,2023-11-20,no diabetes,today,eight,1
  
  '''
# ---
# name: test_skip_field_pattern_absent
  '''
  adtl_valid,adtl_error,cough,epoch,followup_cough,headache,id,text
  False,data.epoch must be date,1,11/01/1999,,,1,Lorem ipsum
  False,data.epoch must be date,0,19/12/2022,,,2,example
  
  '''
# ---
# name: test_skip_field_pattern_present
  '''
  adtl_valid,adtl_error,cough,epoch,followup_cough,headache,id,text
  False,data.epoch must be date,1,11/01/1999,0,3,1,Lorem ipsum
  False,data.epoch must be date,0,19/12/2022,1,0,2,example
  
  '''
# ---
# name: test_subschema_validation_for_large_schemas
  list([
    dict({
      'adtl_valid': True,
      'attribute': 'lesion_ml',
      'phase': 'presentation',
      'subjid': '1',
      'value': '2-5',
    }),
    dict({
      'adtl_valid': True,
      'attribute': 'comor_dementia',
      'phase': 'presentation',
      'subjid': '1',
      'value': 'Yes',
    }),
    dict({
      'adtl_valid': True,
      'attribute': 'vital_rass',
      'phase': 'presentation',
      'subjid': '1',
      'value_num': 1.0,
    }),
    dict({
      'adtl_error': "data.value must be one of ['None', '1', '2-5', '6-9', '10-24', '25-49', '50-99', '100-250', '251-1000', '>1000']",
      'adtl_valid': False,
      'attribute': 'lesion_ml',
      'phase': 'presentation',
      'subjid': '2',
      'value': 'five',
    }),
    dict({
      'adtl_valid': True,
      'attribute': 'comor_dementia',
      'phase': 'presentation',
      'subjid': '2',
      'value': 'Yes',
    }),
    dict({
      'adtl_valid': True,
      'attribute': 'vital_rass',
      'phase': 'presentation',
      'subjid': '2',
      'value_num': 2.0,
    }),
    dict({
      'adtl_valid': True,
      'attribute': 'lesion_ml',
      'phase': 'presentation',
      'subjid': '3',
      'value': '2-5',
    }),
    dict({
      'adtl_valid': True,
      'attribute': 'comor_dementia',
      'phase': 'presentation',
      'subjid': '3',
      'value': 'Yes',
    }),
    dict({
      'adtl_error': "data must contain ['subjid', 'phase', 'attribute', 'value'] properties",
      'adtl_valid': False,
      'attribute': 'comor_asthma',
      'phase': 'presentation',
      'subjid': '3',
      'value_num': 'False',
    }),
    dict({
      'adtl_valid': True,
      'attribute': 'vital_rass',
      'phase': 'presentation',
      'subjid': '3',
      'value_num': 3.0,
    }),
  ])
# ---
# name: test_validation
  '''
  adtl_valid,adtl_error,admission_date,country_iso3,dataset_id,enrolment_date,ethnicity,sex_at_birth,subject_id
  True,,2020-06-08,GBR,dataset-2020-03-23,2020-05-06,['Arabic'],male,S007
  False,"data must contain ['subject_id', 'country_iso3', 'enrolment_date', 'sex_at_birth'] properties",8/6/2022,GBR,dataset-2020-03-23,2022-01-11,['Black'],,S001
  False,data.admission_date must be date,8/6/2020,GBR,dataset-2020-03-23,2020-05-06,['South_Asian'],male,S009
  
  '''
# ---
