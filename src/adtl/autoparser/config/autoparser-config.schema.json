{
  "$schema": "https://json-schema.org/draft-04/schema",
  "id": "https://raw.githubusercontent.com/globaldothealth/isaric/main/autoparser/autoparser-config.schema.json",
  "additionalProperties": false,
  "title": "autoparser configuration schema",
  "description": "Schema for autoparser configuration",
  "required": [
    "name",
    "choice_delimiter",
    "choice_delimiter_map",
    "num_refs",
    "max_common_count",
    "schemas",
    "column_mappings"
  ],
  "properties": {
    "name": {
      "type": "string",
      "description": "Name of the configuration"
    },
    "description": {
      "type": "string",
      "description": "Description of the configuration"
    },
    "language": {
      "type": "string",
      "description": "Language of the configuration, e.g. 'en', 'fr', 'es'"
    },
    "llm_provider": {
      "type": "string",
      "description": "LLM provider to use for the mapper, e.g. 'openai', 'google'. Must match the model; if not specified, defaults to the model's provider."
    },
    "llm_model": {
      "type": "string",
      "description": "LLM model to use for the mapper, e.g. 'gpt-4o-mini'. Must match the provider; if not specified, defaults to the provider's default model."
    },
    "choice_delimiter": {
      "type": "string",
      "description": "Delimiter used to separate integer -> value mappings. Used by parse_choices() to generate values mapping"
    },
    "choice_delimiter_map": {
      "type": "string",
      "description": "Delimiter used to separate integer from value. Used by parse_choices() to generate values mapping"
    },
    "num_refs": {
      "type": "integer",
      "description": "Number of references to use for the mapper. Used by parse_choices() to generate values mapping"
    },
    "max_common_count": {
      "type": "integer",
      "description": "Maximum number of common values to use for the mapper. Used by parse_choices() to generate values mapping"
    },
    "schemas": {
      "type": "object",
      "description": "Schema mappings",
      "properties": {
        "linelist": {
          "type": "string",
          "description": "Schema for the subject mapping"
        },
        "core": {
          "type": "string",
          "description": "Schema for the ISARIC core wide table mapping"
        },
        "attribute": {
          "type": "string",
          "description": "Schema for the ISARIC attribute long table mapping"
        },
        "event": {
          "type": "string",
          "description": "Schema for the ISARIC event long table mapping"
        }
      }
    },
    "column_mappings": {
      "type": "object",
      "description": "Mappings of intermediate CSV to source data dictionary fields",
      "properties": {
        "source_field": {
          "type": "string",
          "description": "Field in the source data file that corresponds to the ISARIC schema field"
        },
        "source_type": {
          "type": "string",
          "description": "Field type according to source"
        },
        "source_description": {
          "type": "string",
          "description": "Field description"
        },
        "choices": {
          "type": "string",
          "description": "Delimited field -> value mappings"
        },
        "common_values": {
          "type": "string",
          "description": "Field containing frequently occurring values, e.g. 'Yes', 'No', 'Unknown'."
        }
      }
    },
    "long_tables": {
      "type": "object",
      "description": "field information for long-format tables, one per table",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "common_cols": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "common_fields": {
            "type": "object",
            "description": "Columns that are common across all long tables, already mapped to fields."
          },
          "variable_col": {
            "type": "string"
          },
          "value_cols": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "variable_col",
          "value_cols"
        ],
        "additionalProperties": false
      }
    }
  }
}
